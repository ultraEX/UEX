.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.TH UEX-TX "1" "April 2018" "uex-tx 16d14cf" "User Commands"
.SH NAME
uex-tx  manual page for uex-tx 16d14cf
.SH DESCRIPTION
UEX uextx utility version v1.0.1.016d14cf
.SS "Usage:"
.TP
uextx [options] <hextx> [commands]
Update hexencoded bitcoin transaction
.TP
uextx [options] \fBcreate\fR [commands]
Create hexencoded bitcoin transaction
.SH OPTIONS
.HP
?
.IP
This help message
.HP
\fBcreate\fR
.IP
Create new, empty TX.
.HP
\fBjson\fR
.IP
Select JSON output
.HP
\fBtxid\fR
.IP
Output only the hexencoded transaction id of the resultant transaction.
.PP
Chain selection options:
.HP
\fBregtest\fR
.IP
Enter regression test mode, which uses a special chain in which blocks
can be solved instantly. This is intended for regression testing
tools and app development.
.HP
\fBtestnet\fR
.IP
Use the test chain
.PP
Commands:
.IP
delin=N
.IP
Delete input N from TX
.IP
delout=N
.IP
Delete output N from TX
.IP
in=TXID:VOUT(:SEQUENCE_NUMBER)
.IP
Add input to TX
.IP
locktime=N
.IP
Set TX lock time to N
.IP
nversion=N
.IP
Set TX version to N
.IP
outaddr=VALUE:ADDRESS
.IP
Add addressbased output to TX
.IP
outdata=[VALUE:]DATA
.IP
Add databased output to TX
.IP
outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]
.IP
Add Pay To nofm Multisig output to TX. n = REQUIRED, m = PUBKEYS.
Optionally add the "W" flag to produce a
paytowitnessscripthash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
outpubkey=VALUE:PUBKEY[:FLAGS]
.IP
Add paytopubkey output to TX. Optionally add the "W" flag to produce a
paytowitnesspubkeyhash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
outscript=VALUE:SCRIPT[:FLAGS]
.IP
Add raw script output to TX. Optionally add the "W" flag to produce a
paytowitnessscripthash output. Optionally add the "S" flag to
wrap the output in a paytoscripthash.
.IP
replaceable(=N)
.IP
Set RBF optin sequence number for input N (if not provided, optin all
available inputs)
.IP
sign=SIGHASHFLAGS
.IP
Add zero or more signatures to transaction. This command requires JSON
registers:prevtxs=JSON object, privatekeys=JSON object. See
signrawtransaction docs for format of sighash flags, JSON
objects.
.PP
Register Commands:
.IP
load=NAME:FILENAME
.IP
Load JSON file FILENAME into register NAME
.IP
set=NAME:JSONSTRING
.IP
Set register NAME to given JSONSTRING
.SH COPYRIGHT
Copyright (C) 2009-2018 The UEX developers
Copyright (C) 2009-2018 The Bitcoin Core developers

Please contribute if you find UEX useful. Visit <https://ultraEX.io> for
further information about the software.
The source code is available from <https://github.com/ultraEX/UEX>.

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by
Eric Young and UPnP software written by Thomas Bernard.
